# This is a basic workflow to help you get started with Actions

name: Build Unity Project

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request: 
    branches: [ master ]

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    name: Building fimi
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - application
        unityVersion:
          - 2020.1.5f1
        targetPlatform:
          - StandaloneOSX # Build a macOS standalone (Intel 64-bit).
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
          - StandaloneLinux64 # Build a Linux 64-bit standalone.
        testMode:
          - playmode
          - editmode

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true

      # Cache
      - uses: actions/cache@v1.1.0
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-
            Library-

      # Test
      - name: Run tests
        id: tests
        uses: webbertakken/unity-test-runner@v1.6
        with:
          testMode: ${{ matrix.testMode }}
          projectPath: ${{ matrix.projectPath }}
          customParameters: '-nographics'
          unityVersion: ${{ matrix.unityVersion }}
          artifactsPath: ${{ matrix.testMode }}-artifacts
          
      # Upload Test Results
      - uses: actions/upload-artifact@v1
        with:
          name: Test results (all modes)
          path: ${{ steps.tests.outputs.artifactsPath }}

      # Build
      - name: Build project
        uses: webbertakken/unity-builder@v1.2
        with:
          versioning: Semantic
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}

      # Output
      - uses: actions/upload-artifact@v1
        with:
          name: Build
          path: ${{ matrix.projectPath }}/build/${{ matrix.targetPlatform }}
